#!/bin/sh
# vi:et lbr noet sw=2 ts=2 tw=79 wrap
# Copyright 2022-2024 David Rabkin
# shellcheck disable=SC2039,SC3043 # Uses local variables.
set -- "$@" --quiet
BSH="$(
	CDPATH='' cd -- "$(dirname -- "$0" 2>&1)" 2>&1 && pwd -P 2>&1
)"/../lib/base.sh || {
	local err=$?
	printf >&2 %s\\n "$BSH"
	exit $err
}

# shellcheck disable=SC2034 # Variable appears unused.
readonly \
	BASE_APP_VERSION=0.9.20240824 \
	BASE_MIN_VERSION=0.9.20230405 \
	BSH \
	DST=/usr/local/bin \
	TGT=/usr/local/bin/base.sh

# shellcheck disable=SC1090 # File not following.
. "$BSH"

# Checks if the destination directory is writable.
dst_avail() {
	iswritable $DST || die $DST is not writable.
}

# Validates and installs.
main() {
	validate
	local msg new old

	# It contains the name, e.g. shellbase 0.9.20230408.
	new="$(sh "$BSH" --quiet --version 2>&1)" || die "$new"
	if file_exists $TGT >/dev/null 2>&1; then
		old="$(sh $TGT --quiet --version 2>&1)" || die "$old"
		[ "$old" = "$new" ] &&
			msg="$new is already installed in $DST. Continue anyway" ||
			msg="$old is installed in $DST. Update to $new"
		should_continue "$msg" || cya
		dst_avail
		cp -f "$BSH" $TGT || die Unable to copy "$BSH" to $TGT.
		printf '%s is updated to %s in %s.\n' "$old" "$new" $DST
	else
		dst_avail
		cp "$BSH" $TGT || die Unable to copy "$BSH" to $TGT.
		printf '%s is installed in %s.\n' "$new" $DST
	fi
}

# Checks the environment.
validate() {
	file_exists $DST || die $DST: No such directory.
}

# Starting point.
main "$@"
